// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String       @id @default(cuid())
  email           String       @unique
  name            String?
  surname         String?
  phone           String?
  password        String
  birthday        DateTime?
  role            String
  sex             String
  student_courses Courses[]    @relation("UserCourses")
  teacher_courses Usercourse[]
  Messages        Messages[]
  Absences        Absences[]
  Todos           Todos[]
  Events          Events[]
  salt            String
}

model Subjects {
  id         String       @id @default(cuid())
  name       String?
  course     Courses?     @relation(fields: [course_id], references: [id])
  course_id  String
  Activities Activities[]
  Absences   Absences[]
}

model Courses {
  id       String       @id @unique @default(cuid())
  name     String?      @unique
  subjects Subjects[]
  users    User[]       @relation("UserCourses")
  teachers Usercourse[]
}

model Messages {
  id         String   @id @default(cuid())
  text       String?
  user       User?    @relation(fields: [user_id], references: [id])
  user_id    String
  from_id    String   @default("0")
  created_at DateTime @default(now())
}

model Todos {
  id      String  @id @default(cuid())
  text    String?
  user    User?   @relation(fields: [user_id], references: [id])
  user_id String
  done    Boolean @default(false)
}

model Events {
  id        String   @id @default(cuid())
  title     String?
  user      User?    @relation(fields: [user_id], references: [id])
  user_id   String
  from_date DateTime
  to_date   DateTime
  all_day   Boolean  @default(false)
  done      Boolean  @default(false)
}

model Absences {
  id            String    @id @default(cuid())
  user          User?     @relation(fields: [user_id], references: [id])
  user_id       String
  date          DateTime
  from_hour     DateTime
  to_hour       DateTime
  justified     Boolean   @default(false)
  state         String    @default("Pendiente")
  subject       Subjects? @relation(fields: [subject_id], references: [id])
  subject_id    String
  file_uploaded Boolean   @default(false)
}

model Activities {
  id         String    @id @default(cuid())
  name       String?
  subject    Subjects? @relation(fields: [subject_id], references: [id])
  subject_id String
  limit_date DateTime
  done       Boolean   @default(false)
  state      String    @default("Pendiente")
  created_at DateTime  @default(now())
}

model Usercourse {
  id        String   @id @default(cuid())
  user      User?    @relation(fields: [user_id], references: [id])
  user_id   String
  course    Courses? @relation(fields: [course_id], references: [id])
  course_id String
}
